{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/guilherme/Documents/React js/diskmoto/pages/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styles from '../styles/Home.module.css';\nconst apiKey = ' AIzaSyBzNT3fX6MOFD3RRyeCJTLwJDJmU-c0Z_s';\nexport default function Home() {\n  const {\n    0: latitude,\n    1: setLatitude\n  } = useState('');\n  const {\n    0: longitude,\n    1: setLongitude\n  } = useState('');\n  const {\n    0: adress,\n    1: setAdress\n  } = useState();\n\n  const getLatLong = async () => {\n    if (latitude == '' && longitude == '') {\n      if (\"geolocation\" in navigator) {\n        console.log('pegando os dados da geo');\n        navigator.geolocation.getCurrentPosition(function (position) {\n          setLatitude(position.coords.latitude);\n          setLongitude(position.coords.longitude);\n        });\n      }\n    } else {\n      console.log(latitude);\n      console.log('tentando', longitude);\n      setAdress(axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`).catch(error => console.log(error)).then(console.log('terminou', adress)));\n      console.log('dentro do setadress', adress);\n    }\n  };\n\n  useEffect(() => {\n    getLatLong();\n  }, [longitude]);\n\n  const clickou = () => console.log(adress);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(adress), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Longitude \", longitude, \" Latitude \", latitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"telefone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [JSON.tostring(adress), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"endereco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Numero da casa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"numero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Destino\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"destino\",\n        onClick: clickou\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/guilherme/Documents/React js/diskmoto/pages/index.jsx"],"names":["React","useEffect","useState","axios","styles","apiKey","Home","latitude","setLatitude","longitude","setLongitude","adress","setAdress","getLatLong","navigator","console","log","geolocation","getCurrentPosition","position","coords","get","catch","error","then","clickou","container","JSON","tostring"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport styles from '../styles/Home.module.css'\n\n\nconst apiKey = ' AIzaSyBzNT3fX6MOFD3RRyeCJTLwJDJmU-c0Z_s'\n\n\nexport default function Home() {\n\n  const [latitude, setLatitude] = useState('')\n  const [longitude, setLongitude] = useState('')\n  const [adress, setAdress] = useState()\n\n  const getLatLong = async () => {\n    if (latitude == '' && longitude == '') {\n      if (\"geolocation\" in navigator) {\n        console.log('pegando os dados da geo')\n        navigator.geolocation.getCurrentPosition(function (position) {\n          setLatitude(position.coords.latitude)\n          setLongitude(position.coords.longitude)\n        })\n      }\n    } else {\n      console.log(latitude)\n      console.log('tentando', longitude)\n      setAdress(axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`).catch((error) => console.log(error)).then(console.log('terminou', adress)))\n      console.log('dentro do setadress',adress)\n    }\n  }\n  useEffect(() => {\n    getLatLong()\n\n  }, [ longitude])\n  const clickou = () => console.log(adress)\n  return (\n\n    \n    <>\n    {console.log(adress)}\n\n      <div className={styles.container}>\n        <h1>Longitude {longitude} Latitude {latitude}</h1>\n        <input type=\"text\" name=\"Nome\" />\n        <h1></h1>\n        <input type=\"text\" name=\"telefone\" />\n        <h1>{JSON.tostring(adress)} </h1>\n        <input type=\"text\" name=\"endereco\" />\n        <h1>Numero da casa</h1>\n        <input type=\"number\" name=\"numero\" />\n        <h1>Destino</h1>\n        <input type=\"text\" name=\"destino\" onClick={clickou}/>\n      </div>\n    </>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}