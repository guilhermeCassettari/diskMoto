{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/guilherme/Documents/React js/diskmoto/pages/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styles from '../styles/Home.module.css';\nconst apiKey = ' AIzaSyBzNT3fX6MOFD3RRyeCJTLwJDJmU-c0Z_s';\nexport default function Home() {\n  const {\n    0: latitude,\n    1: setLatitude\n  } = useState('');\n  const {\n    0: longitude,\n    1: setLongitude\n  } = useState('');\n  const {\n    0: adress,\n    1: setAdress\n  } = useState({});\n\n  const getLatLongAndAress = async () => {\n    if (\"geolocation\" in navigator) {\n      console.log('pegando os dados da geo');\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n      });\n    } else {\n      setLatitude('false');\n    }\n  };\n\n  useEffect(() => {\n    if (latitude == '' && longitude == '') {\n      getLatLongAndAress();\n    } else if (latitude != '' && longitude != '') {\n      console.log(latitude);\n      console.log(longitude);\n      setAdress(axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`).catch(error => console.log(error)));\n    } else {\n      console.log(adress);\n    }\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Longitude \", longitude, \" Latitude \", latitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Numero Celular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"telefone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Endere\\xE7o \", console.log(adress)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"endereco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Numero da casa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"numero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Destino\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"destino\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/home/guilherme/Documents/React js/diskmoto/pages/index.jsx"],"names":["React","useEffect","useState","axios","styles","apiKey","Home","latitude","setLatitude","longitude","setLongitude","adress","setAdress","getLatLongAndAress","navigator","console","log","geolocation","getCurrentPosition","position","coords","get","catch","error","container"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport styles from '../styles/Home.module.css'\n\n\nconst apiKey = ' AIzaSyBzNT3fX6MOFD3RRyeCJTLwJDJmU-c0Z_s'\n\n\nexport default function Home() {\n\n  const [latitude, setLatitude] = useState('')\n  const [longitude, setLongitude] = useState('')\n  const [adress, setAdress] = useState({})\n\n  const getLatLongAndAress = async () => {\n    if (\"geolocation\" in navigator) {\n      console.log('pegando os dados da geo')\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLatitude(position.coords.latitude)\n        setLongitude(position.coords.longitude)        \n      })\n    } else {\n      setLatitude('false')\n      \n    }\n  }\n  useEffect( () => {\n\n    if(latitude == '' && longitude == ''){\n    getLatLongAndAress()  \n    }else if(latitude != '' && longitude != '' ){\n      console.log(latitude)\n      console.log(longitude)\n      setAdress(axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`).catch((error) => console.log(error)))\n\n    }else{\n      console.log(adress)\n\n    }\n  }, [latitude, longitude])\n  return (\n\n\n    <>\n\n      <div className={styles.container}>\n        <h1>Longitude {longitude} Latitude {latitude}</h1>\n        <input type=\"text\" name=\"Nome\" />\n        <h1>Numero Celular</h1>\n        <input type=\"text\" name=\"telefone\" />\n        <h1>Endere√ßo {console.log(adress)}</h1>\n        <input type=\"text\" name=\"endereco\" />\n        <h1>Numero da casa</h1>\n        <input type=\"number\" name=\"numero\" />\n        <h1>Destino</h1>\n        <input type=\"text\" name=\"destino\" />\n      </div>\n    </>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}